{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Programming\\\\Desktop\\\\WD Project 2 Fullstack\\\\frontend\\\\src\\\\screens\\\\InputInfo\\\\InputInfo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './InputInfo.css';\n\n// allows me to decide what the temp Recipe should look like, meaning without the \"created at\" and \"updated at\" fields\n// \"?\" means a value is optional, not NULL, but undefined\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Handles the amount of input fields for INGREDIENTS and INSTRUCTIONS\n// counter for ingredients and instructions\nlet ingredientCount = 1;\nlet instructionCount = 1;\n\n// ---------------------------------------------------------------------------\n// function for adding new input fields for both at the same time\nfunction addInputField(containerID, inputName, placeholder) {\n  // reference for which div were adding an input field to\n  let container = document.getElementById(containerID);\n\n  // creating a new input\n  let newInput = document.createElement('input');\n  newInput.type = \"text\";\n\n  // checks if the divID is the same as ingredientAddRemove then\n  // if its true adds the ingredientsCount to the name \n  // otherwise adds instructionCount to the name\n  let numberTag = containerID === 'ingredientAddRemove' ? ingredientCount : instructionCount;\n  newInput.name = `${inputName}`;\n  newInput.placeholder = `${placeholder} ${numberTag}`;\n  container === null || container === void 0 ? void 0 : container.appendChild(newInput);\n}\n\n// ---------------------------------------------------------------------------\n// function to remove last input field\nfunction removeInputField(containerID) {\n  const container = document.getElementById(containerID);\n  const lastInput = container === null || container === void 0 ? void 0 : container.lastElementChild;\n  if (lastInput && lastInput.type !== \"button\") {\n    container === null || container === void 0 ? void 0 : container.removeChild(lastInput);\n  }\n}\n\n// ---------------------------------------------------------------------------\n// button functions that activate the above functions \n\nfunction addIngredient() {\n  ingredientCount++;\n  //  input name should be structured like ingredients[COUNTER].quantity OR ingredients[COUNTER].name\n  addInputField(\"ingredientAddRemove\", `ingredient[${ingredientCount - 1}].name`, \"Ingredient name\");\n  addInputField(\"ingredientAddRemove\", `ingredient[${ingredientCount - 1}].quantity`, \"Amount\");\n}\nfunction removeIngredient() {\n  if (ingredientCount > 0) {\n    ingredientCount--;\n    removeInputField(\"ingredientAddRemove\");\n    removeInputField(\"ingredientAddRemove\");\n  }\n}\nfunction removeInstructions() {\n  if (instructionCount > 1) {\n    instructionCount--;\n    removeInputField(\"instructionAddRemove\");\n  }\n}\nconst InputInfo = ({\n  onReceiveRecipe\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    ingredients_name: '',\n    ingredients_quantity: '',\n    instructions: '',\n    cuisine: '',\n    preparationTime: '',\n    imageUrl: '',\n    createdBy: ''\n  });\n  const [instructions, setInstructions] = useState(['']);\n  const [tempRecipe, setTempRecipe] = useState(null);\n\n  // handles the instructions array since you can't just use \"instructions[INDEX]\" in the input fields\n\n  let index = 0;\n  const handleIntsructionChange = (e, index) => {\n    const newInstructions = [...instructions];\n    newInstructions[index] = e.target.value;\n    index++;\n    console.log(newInstructions);\n    setInstructions(newInstructions);\n  };\n  function addInstruction() {\n    instructionCount++;\n    setInstructions([...instructions, '']);\n    addInputField(\"instructionAddRemove\", `Instructions[${instructionCount - 1}]`, \"Instructions\");\n  }\n\n  // const handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //     setTempRecipe((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n  // }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n    console.log(JSON.stringify(formData));\n\n    // grabbing info from inputs to send to RecipeDisplay\n    if (formData) {\n      //fetch\n      const url = \"/api/recipes/\";\n      fetch(url, {\n        method: \"POST\",\n        // mode: \"no-cors\",\n        credentials: \"omit\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      }).then(result => {\n        console.log(result);\n        return result.json();\n      }).then(data => {\n        console.log(data);\n        onReceiveRecipe(formData);\n      }).catch(err => {\n        console.log(\"Error while submiting form\", err);\n      });\n    }\n  };\n\n  // random data sets for GENERATE DATA button\n  // this then goes to RecipeDisplay as the current recipe\n  function GenerateData() {\n    const exampleRecipes = [{\n      title: 'Chicken Alfredo Pasta',\n      ingredients_name: 'Chicken breast',\n      ingredients_quantity: '1 lb',\n      instructions: 'Preheat the oven to 350°F (175°C).',\n      cuisine: 'Italian',\n      preparationTime: '40',\n      imageUrl: 'https://imgur.com/oJ3GHiD.jpg',\n      createdBy: 'ChefCooker123'\n    }, {\n      title: 'Vegetarian Stir-Fry',\n      ingredients_name: 'Tofu',\n      ingredients_quantity: '1 block',\n      instructions: 'Preheat the oven to 350°F (175°C).',\n      cuisine: 'Asian',\n      preparationTime: '30',\n      imageUrl: 'https://imgur.com/zs2AqhJ.jpg',\n      createdBy: 'VeggieChef22'\n    }, {\n      title: 'Classic Margherita Pizza',\n      ingredients_name: 'Pizza dough',\n      ingredients_quantity: '1 ball',\n      instructions: 'Preheat the oven to 350°F (175°C).',\n      cuisine: 'Italian',\n      preparationTime: '25',\n      imageUrl: 'https://imgur.com/AfNm4ms.jpg',\n      createdBy: 'PizzaMasterChef'\n    }, {\n      title: 'Chocolate Chip Cookies',\n      ingredients_name: 'All-purpose flour',\n      ingredients_quantity: '2 1/4 cups',\n      instructions: 'Preheat the oven to 350°F (175°C).',\n      cuisine: 'Dessert',\n      preparationTime: '15',\n      imageUrl: 'https://imgur.com/WiEhgd7.jpg',\n      createdBy: 'CookieMonster123'\n    }];\n    let number = Math.floor(Math.random() * (4 - 0));\n    let RecipeToBeSent = exampleRecipes[number];\n    return RecipeToBeSent;\n  }\n  function handleRandomRecipeButton() {\n    let randomRecipe = GenerateData();\n    // checks if the info isn't the same as what's present and rerolls if it is\n    while (randomRecipe.title === formData.title) {\n      console.log(`same info, rerolling!`);\n      randomRecipe = GenerateData();\n    }\n    setFormData({\n      title: randomRecipe.title || '',\n      ingredients_name: randomRecipe.ingredients_name || '',\n      ingredients_quantity: randomRecipe.ingredients_quantity || '',\n      instructions: randomRecipe.instructions || '',\n      cuisine: randomRecipe.cuisine || '',\n      preparationTime: randomRecipe.preparationTime || '',\n      imageUrl: randomRecipe.imageUrl || '',\n      createdBy: randomRecipe.createdBy || ''\n    });\n  }\n\n  // V what will be present on screen V\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"inputRecipeAndID\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: formData.title,\n      onChange: e => setFormData({\n        ...formData,\n        title: e.target.value\n      }),\n      name: \"title\",\n      placeholder: formData.title ? '' : 'Title'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ingredientAddRemove\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: formData.ingredients_name,\n        onChange: e => setFormData({\n          ...formData,\n          ingredients_name: e.target.value\n        }),\n        name: \"ingredients_name\",\n        placeholder: formData.ingredients_name ? '' : 'Ingredient'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: formData.ingredients_quantity,\n        onChange: e => setFormData({\n          ...formData,\n          ingredients_quantity: e.target.value\n        }),\n        name: \"ingredients_quantity\",\n        placeholder: formData.ingredients_quantity ? '' : 'Quantity'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"instructionAddRemove\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: formData.instructions,\n        onChange: e => setFormData({\n          ...formData,\n          instructions: e.target.value\n        }),\n        name: `instructions`,\n        placeholder: formData.instructions ? '' : 'Instructions'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: formData.cuisine,\n      onChange: e => setFormData({\n        ...formData,\n        cuisine: e.target.value\n      }),\n      name: \"cuisine\",\n      placeholder: formData.cuisine ? '' : 'Cuisine'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: formData.preparationTime,\n      onChange: e => setFormData({\n        ...formData,\n        preparationTime: e.target.value\n      }),\n      name: \"preparationTime\",\n      placeholder: formData.preparationTime ? '' : 'Prep time'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: formData.imageUrl,\n      onChange: e => setFormData({\n        ...formData,\n        imageUrl: e.target.value\n      }),\n      name: \"imageUrl\",\n      placeholder: formData.imageUrl ? '' : 'Image Url'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: formData.createdBy,\n      onChange: e => setFormData({\n        ...formData,\n        createdBy: e.target.value\n      }),\n      name: \"created By?\",\n      placeholder: formData.createdBy ? '' : 'Created By?'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      onClick: handleSubmit,\n      value: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: handleRandomRecipeButton,\n      value: \"GENERATE DATA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_s(InputInfo, \"/zrDa0Le5AgYB3gXBu/yzHZtlq4=\");\n_c = InputInfo;\nexport default InputInfo;\nvar _c;\n$RefreshReg$(_c, \"InputInfo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ingredientCount","instructionCount","addInputField","containerID","inputName","placeholder","container","document","getElementById","newInput","createElement","type","numberTag","name","appendChild","removeInputField","lastInput","lastElementChild","removeChild","addIngredient","removeIngredient","removeInstructions","InputInfo","onReceiveRecipe","_s","formData","setFormData","title","ingredients_name","ingredients_quantity","instructions","cuisine","preparationTime","imageUrl","createdBy","setInstructions","tempRecipe","setTempRecipe","index","handleIntsructionChange","e","newInstructions","target","value","console","log","addInstruction","handleSubmit","preventDefault","JSON","stringify","url","fetch","method","credentials","headers","body","then","result","json","data","catch","err","GenerateData","exampleRecipes","number","Math","floor","random","RecipeToBeSent","handleRandomRecipeButton","randomRecipe","id","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Programming/Desktop/WD Project 2 Fullstack/frontend/src/screens/InputInfo/InputInfo.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './InputInfo.css'\r\n\r\n// allows me to decide what the temp Recipe should look like, meaning without the \"created at\" and \"updated at\" fields\r\n// \"?\" means a value is optional, not NULL, but undefined\r\ninterface InsertedRecipe{\r\n  title?: string,\r\n  ingredients_name?: string, \r\n  ingredients_quantity?: string,\r\n  instructions?: string,\r\n  cuisine?: string,\r\n  preparationTime?: string,\r\n  imageUrl?: string,\r\n  createdBy?: string,\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Handles the amount of input fields for INGREDIENTS and INSTRUCTIONS\r\n    // counter for ingredients and instructions\r\n    let ingredientCount= 1\r\n    let instructionCount =1\r\n\r\n\r\n// ---------------------------------------------------------------------------\r\n// function for adding new input fields for both at the same time\r\nfunction addInputField(containerID, inputName, placeholder){\r\n\r\n    // reference for which div were adding an input field to\r\n    let container = document.getElementById(containerID)\r\n\r\n    // creating a new input\r\n    let newInput = document.createElement('input')\r\n    newInput.type = \"text\"\r\n\r\n    // checks if the divID is the same as ingredientAddRemove then\r\n    // if its true adds the ingredientsCount to the name \r\n    // otherwise adds instructionCount to the name\r\n    let numberTag= containerID === 'ingredientAddRemove' ? ingredientCount : instructionCount\r\n    \r\n    newInput.name =`${inputName}`\r\n\r\n    \r\n\r\n    newInput.placeholder = `${placeholder} ${numberTag}`\r\n    container?.appendChild(newInput)\r\n}\r\n\r\n// ---------------------------------------------------------------------------\r\n// function to remove last input field\r\nfunction removeInputField(containerID){\r\n    const container = document.getElementById(containerID) \r\n    \r\n    const lastInput = container?.lastElementChild as HTMLInputElement\r\n    if (lastInput && lastInput.type!==\"button\") {\r\n        container?.removeChild(lastInput)\r\n    }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------------------\r\n// button functions that activate the above functions \r\n\r\nfunction addIngredient() {\r\n    ingredientCount++\r\n    //  input name should be structured like ingredients[COUNTER].quantity OR ingredients[COUNTER].name\r\n    addInputField(\"ingredientAddRemove\",`ingredient[${ingredientCount-1}].name`,\"Ingredient name\")\r\n    addInputField(\"ingredientAddRemove\",`ingredient[${ingredientCount-1}].quantity`,\"Amount\")\r\n}\r\n\r\nfunction removeIngredient() {\r\n    if (ingredientCount>0){\r\n        ingredientCount--\r\n        removeInputField(\"ingredientAddRemove\")\r\n        removeInputField(\"ingredientAddRemove\")\r\n    }\r\n}\r\n\r\n\r\nfunction removeInstructions() {\r\n    if (instructionCount>1){\r\n        instructionCount--\r\n        \r\n        removeInputField(\"instructionAddRemove\")\r\n    }\r\n}\r\n\r\n\r\n\r\ninterface InputInfoProps {\r\n    onReceiveRecipe: (updatedRecipe: InsertedRecipe) => void;\r\n  }\r\n  \r\n\r\nconst InputInfo: React.FC<InputInfoProps> = ({ onReceiveRecipe }) => {\r\n    const [formData, setFormData] = useState({\r\n      title: '',\r\n      ingredients_name: '', \r\n      ingredients_quantity: '',\r\n      instructions: '',\r\n      cuisine: '',\r\n      preparationTime: '',\r\n      imageUrl: '',\r\n      createdBy: ''\r\n    });\r\n\r\nconst [instructions, setInstructions] = useState([''])\r\nconst [tempRecipe, setTempRecipe] = useState<InsertedRecipe| null>(null)\r\n\r\n\r\n// handles the instructions array since you can't just use \"instructions[INDEX]\" in the input fields\r\n\r\nlet index = 0\r\nconst handleIntsructionChange = (e, index) => {\r\n  const newInstructions = [...instructions]\r\n  newInstructions[index] = e.target.value\r\n  index++\r\n  console.log(newInstructions);\r\n  \r\n  setInstructions(newInstructions)\r\n}\r\n\r\nfunction addInstruction() {\r\n  instructionCount++\r\n  setInstructions([...instructions, ''])\r\n  addInputField(\"instructionAddRemove\",`Instructions[${instructionCount-1}]`,\"Instructions\")\r\n}\r\n\r\n\r\n// const handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     setTempRecipe((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n// }\r\n\r\n\r\n\r\nconst handleSubmit= (e: React.MouseEvent<HTMLInputElement, MouseEvent>) => {\r\n  e.preventDefault()\r\n  console.log(formData);\r\n  console.log(JSON.stringify(formData));\r\n  \r\n    // grabbing info from inputs to send to RecipeDisplay\r\n    if (formData) {\r\n    //fetch\r\n    const url =\"/api/recipes/\"\r\n    \r\n    fetch(url, {\r\n        method: \"POST\",\r\n        // mode: \"no-cors\",\r\n        credentials:\"omit\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(formData)\r\n    })\r\n        .then((result)=>{\r\n          console.log(result);\r\n        return result.json()})\r\n        .then((data)=>{\r\n            console.log(data);\r\n            onReceiveRecipe(formData)\r\n        })\r\n        .catch((err)=>{\r\n            console.log(\"Error while submiting form\",err);\r\n            \r\n        })\r\n}}\r\n\r\n// random data sets for GENERATE DATA button\r\n// this then goes to RecipeDisplay as the current recipe\r\nfunction GenerateData(){\r\n  const exampleRecipes = [\r\n    {\r\n      title: 'Chicken Alfredo Pasta',\r\n      ingredients_name: 'Chicken breast',\r\n      ingredients_quantity: '1 lb',\r\n      instructions: 'Preheat the oven to 350°F (175°C).',\r\n      cuisine: 'Italian',\r\n      preparationTime: '40',\r\n      imageUrl: 'https://imgur.com/oJ3GHiD.jpg',\r\n      createdBy: 'ChefCooker123',\r\n    },\r\n    {\r\n      title: 'Vegetarian Stir-Fry',\r\n      ingredients_name: 'Tofu',\r\n      ingredients_quantity: '1 block',\r\n      instructions: 'Preheat the oven to 350°F (175°C).',\r\n      cuisine: 'Asian',\r\n      preparationTime: '30',\r\n      imageUrl: 'https://imgur.com/zs2AqhJ.jpg',\r\n      createdBy: 'VeggieChef22',\r\n    },\r\n    {\r\n      title: 'Classic Margherita Pizza',\r\n      ingredients_name: 'Pizza dough',\r\n      ingredients_quantity: '1 ball',\r\n      instructions: 'Preheat the oven to 350°F (175°C).',\r\n      cuisine: 'Italian',\r\n      preparationTime: '25',\r\n      imageUrl: 'https://imgur.com/AfNm4ms.jpg',\r\n      createdBy: 'PizzaMasterChef',\r\n    },\r\n    {\r\n      title: 'Chocolate Chip Cookies',\r\n      ingredients_name: 'All-purpose flour',\r\n      ingredients_quantity: '2 1/4 cups',\r\n      instructions: 'Preheat the oven to 350°F (175°C).',\r\n      cuisine: 'Dessert',\r\n      preparationTime: '15',\r\n      imageUrl: 'https://imgur.com/WiEhgd7.jpg',\r\n      createdBy: 'CookieMonster123',\r\n    },\r\n  ];\r\n    let number = Math.floor(Math.random() * (4-0))\r\n    let RecipeToBeSent = exampleRecipes[number]\r\n    return RecipeToBeSent\r\n}\r\n  \r\nfunction handleRandomRecipeButton() {\r\nlet randomRecipe = GenerateData()\r\n// checks if the info isn't the same as what's present and rerolls if it is\r\nwhile (randomRecipe.title === formData.title){\r\nconsole.log(`same info, rerolling!`);\r\n\r\nrandomRecipe = GenerateData()}\r\nsetFormData({\r\n  title: randomRecipe.title || '',\r\n  ingredients_name: randomRecipe.ingredients_name || '',\r\n  ingredients_quantity: randomRecipe.ingredients_quantity || '',\r\n  instructions: randomRecipe.instructions || '', \r\n  cuisine: randomRecipe.cuisine || '',\r\n  preparationTime: randomRecipe.preparationTime || '',\r\n  imageUrl: randomRecipe.imageUrl || '',\r\n  createdBy: randomRecipe.createdBy || ''\r\n});\r\n\r\n}\r\n\r\n\r\n// V what will be present on screen V\r\nreturn(\r\n     \r\n\r\n\r\n    <div id='inputRecipeAndID'>\r\n        \r\n        <input type=\"text\" value={formData.title} onChange={(e)=>setFormData({...formData, title: e.target.value})} name='title' placeholder={formData.title ? '':'Title'} />\r\n        <br />\r\n        {/* // ------------------- ingredients ------------------- */}\r\n        <br />\r\n        <div id='ingredientAddRemove'>\r\n        <input type=\"text\" value={formData.ingredients_name} onChange={(e)=>setFormData({...formData, ingredients_name: e.target.value})} \r\n        name='ingredients_name' placeholder={formData.ingredients_name ? '':'Ingredient'} />\r\n\r\n        <input type=\"text\" value={formData.ingredients_quantity} onChange={(e)=>setFormData({...formData, ingredients_quantity: e.target.value})} \r\n        name='ingredients_quantity' placeholder={formData.ingredients_quantity ? '':'Quantity'} />\r\n\r\n        {/* <input type='button' onClick={addIngredient} value=\"+\"/> */}\r\n        {/* <input type='button' onClick={removeIngredient} value=\"-\"/> */}\r\n        <br />\r\n        </div>\r\n        <br />\r\n\r\n        {/* // ------------------- instructions------------------- */}\r\n        <div id='instructionAddRemove' >\r\n        <input type=\"text\" value={formData.instructions} onChange={(e)=>setFormData({...formData, instructions: e.target.value})} name={`instructions`}placeholder={formData.instructions ? '':'Instructions'} />\r\n        {/* <input type='button' onClick={addInstruction} value=\"+\"/>\r\n        <input type='button' onClick={removeInstructions} value=\"-\"/> */}\r\n        <br />\r\n        </div>\r\n        <br />\r\n\r\n        \r\n        \r\n        <input type=\"text\" value={formData.cuisine} onChange={(e)=>setFormData({...formData, cuisine: e.target.value})} name='cuisine' placeholder={formData.cuisine ? '':'Cuisine'} />\r\n        <br />\r\n\r\n        <input type=\"text\" value={formData.preparationTime} onChange={(e)=>setFormData({...formData, preparationTime: e.target.value})} name='preparationTime' placeholder={formData.preparationTime ? '':'Prep time'} />\r\n        <br />\r\n\r\n        <input type=\"text\" value={formData.imageUrl} onChange={(e)=>setFormData({...formData, imageUrl: e.target.value})} name='imageUrl' placeholder={formData.imageUrl ? '':'Image Url'} />\r\n        <br />\r\n\r\n        <input type=\"text\" value={formData.createdBy} onChange={(e)=>setFormData({...formData, createdBy: e.target.value})} name='created By?' placeholder={formData.createdBy ? '':'Created By?'} />\r\n        <br />\r\n        \r\n        <br />\r\n        <input type=\"submit\" onClick={handleSubmit} value=\"SUBMIT\" />\r\n        <br />  \r\n        <br />\r\n\r\n        <input type='button' onClick={handleRandomRecipeButton} value=\"GENERATE DATA\"/>\r\n        <br />\r\n\r\n\r\n    </div>\r\n)\r\n\r\n}\r\nexport default InputInfo "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}