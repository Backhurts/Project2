{"ast":null,"code":"import React,{useState}from'react';import'./InputInfo.css';// allows me to decide what the temp Recipe should look like, meaning without the \"created at\" and \"updated at\" fields\n// \"?\" means a value is optional, not NULL, but undefined\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// Handles the amount of input fields for INGREDIENTS and INSTRUCTIONS\n// counter for ingredients and instructions\nlet ingredientCount=1;let instructionCount=1;// ---------------------------------------------------------------------------\n// function for adding new input fields for both at the same time\nfunction addInputField(containerID,inputName,placeholder){// reference for which div were adding an input field to\nlet container=document.getElementById(containerID);// creating a new input\nlet newInput=document.createElement('input');newInput.type=\"text\";// checks if the divID is the same as ingredientAddRemove then\n// if its true adds the ingredientsCount to the name \n// otherwise adds instructionCount to the name\nlet numberTag=containerID==='ingredientAddRemove'?ingredientCount:instructionCount;newInput.name=\"\".concat(inputName);newInput.placeholder=\"\".concat(placeholder,\" \").concat(numberTag);container===null||container===void 0?void 0:container.appendChild(newInput);}// ---------------------------------------------------------------------------\n// function to remove last input field\nfunction removeInputField(containerID){const container=document.getElementById(containerID);const lastInput=container===null||container===void 0?void 0:container.lastElementChild;if(lastInput&&lastInput.type!==\"button\"){container===null||container===void 0?void 0:container.removeChild(lastInput);}}// ---------------------------------------------------------------------------\n// button functions that activate the above functions \nfunction addIngredient(){ingredientCount++;//  input name should be structured like ingredients[COUNTER].quantity OR ingredients[COUNTER].name\naddInputField(\"ingredientAddRemove\",\"ingredient[\".concat(ingredientCount-1,\"].name\"),\"Ingredient name\");addInputField(\"ingredientAddRemove\",\"ingredient[\".concat(ingredientCount-1,\"].quantity\"),\"Amount\");}function removeIngredient(){if(ingredientCount>0){ingredientCount--;removeInputField(\"ingredientAddRemove\");removeInputField(\"ingredientAddRemove\");}}function removeInstructions(){if(instructionCount>1){instructionCount--;removeInputField(\"instructionAddRemove\");}}const InputInfo=_ref=>{let{onReceiveRecipe}=_ref;const[formData,setFormData]=useState({title:'',ingredients_name:'',ingredients_quantity:'',instructions:'',cuisine:'',preparationTime:'',imageUrl:'',createdBy:''});const[instructions,setInstructions]=useState(['']);const[tempRecipe,setTempRecipe]=useState(null);// handles the instructions array since you can't just use \"instructions[INDEX]\" in the input fields\nlet index=0;const handleIntsructionChange=(e,index)=>{const newInstructions=[...instructions];newInstructions[index]=e.target.value;index++;console.log(newInstructions);setInstructions(newInstructions);};function addInstruction(){instructionCount++;setInstructions([...instructions,'']);addInputField(\"instructionAddRemove\",\"Instructions[\".concat(instructionCount-1,\"]\"),\"Instructions\");}// const handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setTempRecipe((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n// }\nconst handleSubmit=e=>{e.preventDefault();console.log(formData);console.log(JSON.stringify(formData));// grabbing info from inputs to send to RecipeDisplay\nif(formData){//fetch\nconst url=\"/api/recipes/\";fetch(url,{method:\"POST\",// mode: \"no-cors\",\ncredentials:\"omit\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(formData)}).then(result=>{console.log(result);return result.json();}).then(data=>{console.log(data);onReceiveRecipe(formData);}).catch(err=>{console.log(\"Error while submiting form\",err);});}};// random data sets for GENERATE DATA button\n// this then goes to RecipeDisplay as the current recipe\nfunction GenerateData(){const exampleRecipes=[{title:'Chicken Alfredo Pasta',ingredients_name:'Chicken breast',ingredients_quantity:'1 lb',instructions:'Preheat the oven to 350°F (175°C).',cuisine:'Italian',preparationTime:'40',imageUrl:'https://imgur.com/oJ3GHiD.jpg',createdBy:'ChefCooker123'},{title:'Vegetarian Stir-Fry',ingredients_name:'Tofu',ingredients_quantity:'1 block',instructions:'Preheat the oven to 350°F (175°C).',cuisine:'Asian',preparationTime:'30',imageUrl:'https://imgur.com/zs2AqhJ.jpg',createdBy:'VeggieChef22'},{title:'Classic Margherita Pizza',ingredients_name:'Pizza dough',ingredients_quantity:'1 ball',instructions:'Preheat the oven to 350°F (175°C).',cuisine:'Italian',preparationTime:'25',imageUrl:'https://imgur.com/AfNm4ms.jpg',createdBy:'PizzaMasterChef'},{title:'Chocolate Chip Cookies',ingredients_name:'All-purpose flour',ingredients_quantity:'2 1/4 cups',instructions:'Preheat the oven to 350°F (175°C).',cuisine:'Dessert',preparationTime:'15',imageUrl:'https://imgur.com/WiEhgd7.jpg',createdBy:'CookieMonster123'}];let number=Math.floor(Math.random()*(4-0));let RecipeToBeSent=exampleRecipes[number];return RecipeToBeSent;}function handleRandomRecipeButton(){let randomRecipe=GenerateData();// checks if the info isn't the same as what's present and rerolls if it is\nwhile(randomRecipe.title===formData.title){console.log(\"same info, rerolling!\");randomRecipe=GenerateData();}setFormData({title:randomRecipe.title||'',ingredients_name:randomRecipe.ingredients_name||'',ingredients_quantity:randomRecipe.ingredients_quantity||'',instructions:randomRecipe.instructions||'',cuisine:randomRecipe.cuisine||'',preparationTime:randomRecipe.preparationTime||'',imageUrl:randomRecipe.imageUrl||'',createdBy:randomRecipe.createdBy||''});}// V what will be present on screen V\nreturn/*#__PURE__*/_jsxs(\"div\",{id:\"inputRecipeAndID\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.title,onChange:e=>setFormData({...formData,title:e.target.value}),name:\"title\",placeholder:formData.title?'':'Title'}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{id:\"ingredientAddRemove\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.ingredients_name,onChange:e=>setFormData({...formData,ingredients_name:e.target.value}),name:\"ingredients_name\",placeholder:formData.ingredients_name?'':'Ingredient'}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.ingredients_quantity,onChange:e=>setFormData({...formData,ingredients_quantity:e.target.value}),name:\"ingredients_quantity\",placeholder:formData.ingredients_quantity?'':'Quantity'}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{id:\"instructionAddRemove\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.instructions,onChange:e=>setFormData({...formData,instructions:e.target.value}),name:\"instructions\",placeholder:formData.instructions?'':'Instructions'}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.cuisine,onChange:e=>setFormData({...formData,cuisine:e.target.value}),name:\"cuisine\",placeholder:formData.cuisine?'':'Cuisine'}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.preparationTime,onChange:e=>setFormData({...formData,preparationTime:e.target.value}),name:\"preparationTime\",placeholder:formData.preparationTime?'':'Prep time'}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.imageUrl,onChange:e=>setFormData({...formData,imageUrl:e.target.value}),name:\"imageUrl\",placeholder:formData.imageUrl?'':'Image Url'}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.createdBy,onChange:e=>setFormData({...formData,createdBy:e.target.value}),name:\"created By?\",placeholder:formData.createdBy?'':'Created By?'}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",onClick:handleSubmit,value:\"SUBMIT\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"button\",onClick:handleRandomRecipeButton,value:\"GENERATE DATA\"}),/*#__PURE__*/_jsx(\"br\",{})]});};export default InputInfo;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ingredientCount","instructionCount","addInputField","containerID","inputName","placeholder","container","document","getElementById","newInput","createElement","type","numberTag","name","concat","appendChild","removeInputField","lastInput","lastElementChild","removeChild","addIngredient","removeIngredient","removeInstructions","InputInfo","_ref","onReceiveRecipe","formData","setFormData","title","ingredients_name","ingredients_quantity","instructions","cuisine","preparationTime","imageUrl","createdBy","setInstructions","tempRecipe","setTempRecipe","index","handleIntsructionChange","e","newInstructions","target","value","console","log","addInstruction","handleSubmit","preventDefault","JSON","stringify","url","fetch","method","credentials","headers","body","then","result","json","data","catch","err","GenerateData","exampleRecipes","number","Math","floor","random","RecipeToBeSent","handleRandomRecipeButton","randomRecipe","id","children","onChange","onClick"],"sources":["C:/Users/Programming/Desktop/WD Project 2 Fullstack/frontend/src/screens/InputInfo/InputInfo.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './InputInfo.css'\r\n\r\n// allows me to decide what the temp Recipe should look like, meaning without the \"created at\" and \"updated at\" fields\r\n// \"?\" means a value is optional, not NULL, but undefined\r\ninterface InsertedRecipe{\r\n  title?: string,\r\n  ingredients_name?: string, \r\n  ingredients_quantity?: string,\r\n  instructions?: string,\r\n  cuisine?: string,\r\n  preparationTime?: string,\r\n  imageUrl?: string,\r\n  createdBy?: string,\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Handles the amount of input fields for INGREDIENTS and INSTRUCTIONS\r\n    // counter for ingredients and instructions\r\n    let ingredientCount= 1\r\n    let instructionCount =1\r\n\r\n\r\n// ---------------------------------------------------------------------------\r\n// function for adding new input fields for both at the same time\r\nfunction addInputField(containerID, inputName, placeholder){\r\n\r\n    // reference for which div were adding an input field to\r\n    let container = document.getElementById(containerID)\r\n\r\n    // creating a new input\r\n    let newInput = document.createElement('input')\r\n    newInput.type = \"text\"\r\n\r\n    // checks if the divID is the same as ingredientAddRemove then\r\n    // if its true adds the ingredientsCount to the name \r\n    // otherwise adds instructionCount to the name\r\n    let numberTag= containerID === 'ingredientAddRemove' ? ingredientCount : instructionCount\r\n    \r\n    newInput.name =`${inputName}`\r\n\r\n    \r\n\r\n    newInput.placeholder = `${placeholder} ${numberTag}`\r\n    container?.appendChild(newInput)\r\n}\r\n\r\n// ---------------------------------------------------------------------------\r\n// function to remove last input field\r\nfunction removeInputField(containerID){\r\n    const container = document.getElementById(containerID) \r\n    \r\n    const lastInput = container?.lastElementChild as HTMLInputElement\r\n    if (lastInput && lastInput.type!==\"button\") {\r\n        container?.removeChild(lastInput)\r\n    }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------------------\r\n// button functions that activate the above functions \r\n\r\nfunction addIngredient() {\r\n    ingredientCount++\r\n    //  input name should be structured like ingredients[COUNTER].quantity OR ingredients[COUNTER].name\r\n    addInputField(\"ingredientAddRemove\",`ingredient[${ingredientCount-1}].name`,\"Ingredient name\")\r\n    addInputField(\"ingredientAddRemove\",`ingredient[${ingredientCount-1}].quantity`,\"Amount\")\r\n}\r\n\r\nfunction removeIngredient() {\r\n    if (ingredientCount>0){\r\n        ingredientCount--\r\n        removeInputField(\"ingredientAddRemove\")\r\n        removeInputField(\"ingredientAddRemove\")\r\n    }\r\n}\r\n\r\n\r\nfunction removeInstructions() {\r\n    if (instructionCount>1){\r\n        instructionCount--\r\n        \r\n        removeInputField(\"instructionAddRemove\")\r\n    }\r\n}\r\n\r\n\r\n\r\ninterface InputInfoProps {\r\n    onReceiveRecipe: (updatedRecipe: InsertedRecipe) => void;\r\n  }\r\n  \r\n\r\nconst InputInfo: React.FC<InputInfoProps> = ({ onReceiveRecipe }) => {\r\n    const [formData, setFormData] = useState({\r\n      title: '',\r\n      ingredients_name: '', \r\n      ingredients_quantity: '',\r\n      instructions: '',\r\n      cuisine: '',\r\n      preparationTime: '',\r\n      imageUrl: '',\r\n      createdBy: ''\r\n    });\r\n\r\nconst [instructions, setInstructions] = useState([''])\r\nconst [tempRecipe, setTempRecipe] = useState<InsertedRecipe| null>(null)\r\n\r\n\r\n// handles the instructions array since you can't just use \"instructions[INDEX]\" in the input fields\r\n\r\nlet index = 0\r\nconst handleIntsructionChange = (e, index) => {\r\n  const newInstructions = [...instructions]\r\n  newInstructions[index] = e.target.value\r\n  index++\r\n  console.log(newInstructions);\r\n  \r\n  setInstructions(newInstructions)\r\n}\r\n\r\nfunction addInstruction() {\r\n  instructionCount++\r\n  setInstructions([...instructions, ''])\r\n  addInputField(\"instructionAddRemove\",`Instructions[${instructionCount-1}]`,\"Instructions\")\r\n}\r\n\r\n\r\n// const handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     setTempRecipe((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n// }\r\n\r\n\r\n\r\nconst handleSubmit= (e: React.MouseEvent<HTMLInputElement, MouseEvent>) => {\r\n  e.preventDefault()\r\n  console.log(formData);\r\n  console.log(JSON.stringify(formData));\r\n  \r\n    // grabbing info from inputs to send to RecipeDisplay\r\n    if (formData) {\r\n    //fetch\r\n    const url =\"/api/recipes/\"\r\n    \r\n    fetch(url, {\r\n        method: \"POST\",\r\n        // mode: \"no-cors\",\r\n        credentials:\"omit\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(formData)\r\n    })\r\n        .then((result)=>{\r\n          console.log(result);\r\n        return result.json()})\r\n        .then((data)=>{\r\n            console.log(data);\r\n            onReceiveRecipe(formData)\r\n        })\r\n        .catch((err)=>{\r\n            console.log(\"Error while submiting form\",err);\r\n            \r\n        })\r\n}}\r\n\r\n// random data sets for GENERATE DATA button\r\n// this then goes to RecipeDisplay as the current recipe\r\nfunction GenerateData(){\r\n  const exampleRecipes = [\r\n    {\r\n      title: 'Chicken Alfredo Pasta',\r\n      ingredients_name: 'Chicken breast',\r\n      ingredients_quantity: '1 lb',\r\n      instructions: 'Preheat the oven to 350°F (175°C).',\r\n      cuisine: 'Italian',\r\n      preparationTime: '40',\r\n      imageUrl: 'https://imgur.com/oJ3GHiD.jpg',\r\n      createdBy: 'ChefCooker123',\r\n    },\r\n    {\r\n      title: 'Vegetarian Stir-Fry',\r\n      ingredients_name: 'Tofu',\r\n      ingredients_quantity: '1 block',\r\n      instructions: 'Preheat the oven to 350°F (175°C).',\r\n      cuisine: 'Asian',\r\n      preparationTime: '30',\r\n      imageUrl: 'https://imgur.com/zs2AqhJ.jpg',\r\n      createdBy: 'VeggieChef22',\r\n    },\r\n    {\r\n      title: 'Classic Margherita Pizza',\r\n      ingredients_name: 'Pizza dough',\r\n      ingredients_quantity: '1 ball',\r\n      instructions: 'Preheat the oven to 350°F (175°C).',\r\n      cuisine: 'Italian',\r\n      preparationTime: '25',\r\n      imageUrl: 'https://imgur.com/AfNm4ms.jpg',\r\n      createdBy: 'PizzaMasterChef',\r\n    },\r\n    {\r\n      title: 'Chocolate Chip Cookies',\r\n      ingredients_name: 'All-purpose flour',\r\n      ingredients_quantity: '2 1/4 cups',\r\n      instructions: 'Preheat the oven to 350°F (175°C).',\r\n      cuisine: 'Dessert',\r\n      preparationTime: '15',\r\n      imageUrl: 'https://imgur.com/WiEhgd7.jpg',\r\n      createdBy: 'CookieMonster123',\r\n    },\r\n  ];\r\n    let number = Math.floor(Math.random() * (4-0))\r\n    let RecipeToBeSent = exampleRecipes[number]\r\n    return RecipeToBeSent\r\n}\r\n  \r\nfunction handleRandomRecipeButton() {\r\nlet randomRecipe = GenerateData()\r\n// checks if the info isn't the same as what's present and rerolls if it is\r\nwhile (randomRecipe.title === formData.title){\r\nconsole.log(`same info, rerolling!`);\r\n\r\nrandomRecipe = GenerateData()}\r\nsetFormData({\r\n  title: randomRecipe.title || '',\r\n  ingredients_name: randomRecipe.ingredients_name || '',\r\n  ingredients_quantity: randomRecipe.ingredients_quantity || '',\r\n  instructions: randomRecipe.instructions || '', \r\n  cuisine: randomRecipe.cuisine || '',\r\n  preparationTime: randomRecipe.preparationTime || '',\r\n  imageUrl: randomRecipe.imageUrl || '',\r\n  createdBy: randomRecipe.createdBy || ''\r\n});\r\n\r\n}\r\n\r\n\r\n// V what will be present on screen V\r\nreturn(\r\n     \r\n\r\n\r\n    <div id='inputRecipeAndID'>\r\n        \r\n        <input type=\"text\" value={formData.title} onChange={(e)=>setFormData({...formData, title: e.target.value})} name='title' placeholder={formData.title ? '':'Title'} />\r\n        <br />\r\n        {/* // ------------------- ingredients ------------------- */}\r\n        <br />\r\n        <div id='ingredientAddRemove'>\r\n        <input type=\"text\" value={formData.ingredients_name} onChange={(e)=>setFormData({...formData, ingredients_name: e.target.value})} \r\n        name='ingredients_name' placeholder={formData.ingredients_name ? '':'Ingredient'} />\r\n\r\n        <input type=\"text\" value={formData.ingredients_quantity} onChange={(e)=>setFormData({...formData, ingredients_quantity: e.target.value})} \r\n        name='ingredients_quantity' placeholder={formData.ingredients_quantity ? '':'Quantity'} />\r\n\r\n        {/* <input type='button' onClick={addIngredient} value=\"+\"/> */}\r\n        {/* <input type='button' onClick={removeIngredient} value=\"-\"/> */}\r\n        <br />\r\n        </div>\r\n        <br />\r\n\r\n        {/* // ------------------- instructions------------------- */}\r\n        <div id='instructionAddRemove' >\r\n        <input type=\"text\" value={formData.instructions} onChange={(e)=>setFormData({...formData, instructions: e.target.value})} name={`instructions`}placeholder={formData.instructions ? '':'Instructions'} />\r\n        {/* <input type='button' onClick={addInstruction} value=\"+\"/>\r\n        <input type='button' onClick={removeInstructions} value=\"-\"/> */}\r\n        <br />\r\n        </div>\r\n        <br />\r\n\r\n        \r\n        \r\n        <input type=\"text\" value={formData.cuisine} onChange={(e)=>setFormData({...formData, cuisine: e.target.value})} name='cuisine' placeholder={formData.cuisine ? '':'Cuisine'} />\r\n        <br />\r\n\r\n        <input type=\"text\" value={formData.preparationTime} onChange={(e)=>setFormData({...formData, preparationTime: e.target.value})} name='preparationTime' placeholder={formData.preparationTime ? '':'Prep time'} />\r\n        <br />\r\n\r\n        <input type=\"text\" value={formData.imageUrl} onChange={(e)=>setFormData({...formData, imageUrl: e.target.value})} name='imageUrl' placeholder={formData.imageUrl ? '':'Image Url'} />\r\n        <br />\r\n\r\n        <input type=\"text\" value={formData.createdBy} onChange={(e)=>setFormData({...formData, createdBy: e.target.value})} name='created By?' placeholder={formData.createdBy ? '':'Created By?'} />\r\n        <br />\r\n        \r\n        <br />\r\n        <input type=\"submit\" onClick={handleSubmit} value=\"SUBMIT\" />\r\n        <br />  \r\n        <br />\r\n\r\n        <input type='button' onClick={handleRandomRecipeButton} value=\"GENERATE DATA\"/>\r\n        <br />\r\n\r\n\r\n    </div>\r\n)\r\n\r\n}\r\nexport default InputInfo "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}